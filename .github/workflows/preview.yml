name: Jekyll Site Preview
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      pull-requests: write
      pages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Jekyll
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full build-essential zlib1g-dev
          sudo gem install bundler:2.1.4
          
          # Install jekyll and dependencies
          bundle config set --local path 'vendor/bundle'
          bundle install

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Deploy preview
        run: |
          # Create a temporary directory for the preview
          PR_DIR="pr-${{ github.event.pull_request.number }}"
          
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Fetch gh-pages branch if it exists, or create it
          if git fetch origin gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf .
            git commit --allow-empty -m "Initial gh-pages branch"
          fi
          
          # Remove previous preview if it exists
          if [ -d "$PR_DIR" ]; then
            rm -rf "$PR_DIR"
          fi
          
          # Move built site to PR-specific directory
          mkdir -p "$PR_DIR"
          cp -r _site/* "$PR_DIR/"
          
          # Commit and push
          git add .
          git commit -m "Deploy preview for PR #${{ github.event.pull_request.number }}"
          git push origin gh-pages

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const repoName = context.repo.repo;
            const ownerName = context.repo.owner;
            const previewUrl = `https://${ownerName}.github.io/${repoName}/pr-${prNumber}/`;
            
            github.rest.issues.createComment({
              owner: ownerName,
              repo: repoName,
              issue_number: prNumber,
              body: `üìù Preview this PR at: ${previewUrl}\n\nNote: It may take a few minutes for GitHub Pages to update.`
            });
